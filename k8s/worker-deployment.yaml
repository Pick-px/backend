apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-worker
  namespace: nestjs-app
  labels:
    app: nestjs-worker
    component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nestjs-worker
      component: worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nestjs-worker
        component: worker
    spec:
      # 파드 종료 시 유예 기간 증가
      terminationGracePeriodSeconds: 120
      containers:
        - name: nestjs-worker
          image: 863518449560.dkr.ecr.ap-northeast-2.amazonaws.com/nestjs-app:latest
          command: ['node', 'dist/queues/bullmq.worker.js']
          # 리소스 제한
          resources:
            requests:
              memory: '2Gi'
              cpu: '2000m'
            limits:
              memory: '4Gi'
              cpu: '4000m'
          # Startup Probe 추가
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pgrep -f 'node.*worker' > /dev/null"
            failureThreshold: 30
            periodSeconds: 10
          # Readiness Probe 추가
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pgrep -f 'node.*worker' > /dev/null"
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          # Liveness Probe
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pgrep -f 'node.*worker' > /dev/null"
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          # Graceful shutdown
          lifecycle:
            preStop:
              exec:
                command: ['/bin/sh', '-c', 'sleep 15']
          env:
            # Node.js 메모리 제한 설정
            - name: NODE_OPTIONS
              value: '--max-old-space-size=4096'
            - name: NODE_ENV
              value: 'production'
            # JWT Secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            # Database Connection
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: database-url
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-port
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-db
            - name: POSTGRES_SSL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-ssl
            # Redis Connection
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: redis-url
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: redis-port
            - name: REDIS_TLS
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: redis-tls
            # Google OAuth
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: google-client-id
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: google-client-secret
            - name: GOOGLE_REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: google-redirect-uri
            - name: AWS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: aws-s3-bucket
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: aws-secret-access-key
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: aws-region
      restartPolicy: Always
---
# Pod Disruption Budget 추가
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nestjs-worker-pdb
  namespace: nestjs-app
spec:
  minAvailable: 1 # 항상 최소 1개의 pod가 사용 가능하도록 보장
  selector:
    matchLabels:
      app: nestjs-worker
      component: worker
