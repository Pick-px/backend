name: Cleanup Staging Environment

on:
  pull_request:
    types: [closed]

jobs:
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ap-northeast-2 --name nestjs-cluster

      - name: Cleanup staging environment
        run: |
          echo "🧹 스테이징 환경 정리 중..."
          
          # 스테이징 네임스페이스 존재 확인
          if kubectl get namespace nestjs-app-staging > /dev/null 2>&1; then
            echo "📦 스테이징 리소스 삭제 중..."
            
            # 네임스페이스 라벨 정보 출력
            echo "📋 네임스페이스 정보:"
            kubectl get namespace nestjs-app-staging --show-labels
            
            # 모든 리소스 삭제
            kubectl delete all --all -n nestjs-app-staging || echo "리소스 삭제 실패 (이미 삭제됨)"
            kubectl delete secrets --all -n nestjs-app-staging || echo "시크릿 삭제 실패"
            kubectl delete configmaps --all -n nestjs-app-staging || echo "컨피그맵 삭제 실패"
            
            # 네임스페이스 삭제
            kubectl delete namespace nestjs-app-staging || echo "네임스페이스 삭제 실패"
            
            echo "✅ 스테이징 환경 정리 완료"
          else
            echo "ℹ️ 스테이징 네임스페이스가 존재하지 않습니다"
          fi

      - name: Cleanup old staging namespaces (TTL based)
        run: |
          echo "🕐 TTL 기반 오래된 스테이징 환경 정리..."
          
          # 현재 Unix 타임스탬프
          CURRENT_TIME=$(date +%s)
          
          # TTL이 지난 네임스페이스 찾기
          kubectl get namespaces -l staging.cleanup/ttl-unix --no-headers | while read namespace rest; do
            TTL_UNIX=$(kubectl get namespace $namespace -o jsonpath='{.metadata.labels.staging\.cleanup/ttl-unix}' 2>/dev/null || echo "")
            
            if [ ! -z "$TTL_UNIX" ] && [ "$CURRENT_TIME" -gt "$TTL_UNIX" ]; then
              echo "⏰ TTL 만료된 네임스페이스 발견: $namespace"
              
              # 리소스 삭제
              kubectl delete all --all -n $namespace || echo "리소스 삭제 실패"
              kubectl delete secrets --all -n $namespace || echo "시크릿 삭제 실패"
              kubectl delete configmaps --all -n $namespace || echo "컨피그맵 삭제 실패"
              
              # 네임스페이스 삭제
              kubectl delete namespace $namespace || echo "네임스페이스 삭제 실패: $namespace"
              
              echo "✅ 만료된 스테이징 환경 정리 완료: $namespace"
            fi
          done

      - name: Cleanup ECR staging images
        run: |
          echo "🗑️ 스테이징 이미지 정리 중..."
          
          # PR 관련 이미지 태그 목록 조회
          PR_NUMBER=${{ github.event.number }}
          
          # ECR에서 PR 관련 이미지 삭제 (최근 5개 제외하고)
          aws ecr list-images \
            --repository-name nestjs-app \
            --filter tagStatus=TAGGED \
            --query "imageIds[?starts_with(imageTag, 'pr-${PR_NUMBER}-')]" \
            --output json | \
          jq -r '.[5:] | .[] | .imageDigest' | \
          while read digest; do
            if [ ! -z "$digest" ]; then
              aws ecr batch-delete-image \
                --repository-name nestjs-app \
                --image-ids imageDigest=$digest || echo "이미지 삭제 실패: $digest"
            fi
          done
          
          echo "✅ 스테이징 이미지 정리 완료"
